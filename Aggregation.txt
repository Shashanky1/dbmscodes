
// Sample Data Insertion for purchase_orders collection
db.purchase_orders.insertMany([
    { product: "toothbrush", total: 4.75, customer: "Mike" },
    { product: "guitar", total: 199.99, customer: "Tom" },
    { product: "milk", total: 11.33, customer: "Mike" },
    { product: "pizza", total: 8.50, customer: "Karen" },
    { product: "toothbrush", total: 4.75, customer: "Karen" },
    { product: "pizza", total: 4.75, customer: "Dave" },
    { product: "toothbrush", total: 4.75, customer: "Mike" }
]);

// 1. Find out how many toothbrushes were sold
db.purchase_orders.aggregate([
    { $match: { product: "toothbrush" } },
    { $count: "toothbrush_sold" }
]);

// 2. Find how much money has been earned by selling toothbrushes and pizza
db.purchase_orders.aggregate([
    { $match: { product: { $in: ["toothbrush", "pizza"] } } },
    { $group: { _id: null, total_earned: { $sum: "$total" } } }
]);

// 3. Find the list of all sold products
db.purchase_orders.distinct("product");

// 4. Find the total amount of money spent by each customer
db.purchase_orders.aggregate([
    { $group: { _id: "$customer", total_spent: { $sum: "$total" } } }
]);

// 5. Find how much has been spent on each product and sort it by amount spent
db.purchase_orders.aggregate([
    { $group: { _id: "$product", total_spent: { $sum: "$total" } } },
    { $sort: { total_spent: -1 } }
]);

// 6. Find the product with least earnings
db.purchase_orders.aggregate([
    { $group: { _id: "$product", total_earned: { $sum: "$total" } } },
    { $sort: { total_earned: 1 } },
    { $limit: 1 }
]);

// 7. Find how much money each customer has spent on toothbrushes and pizza
db.purchase_orders.aggregate([
    { $match: { product: { $in: ["toothbrush", "pizza"] } } },
    { $group: { _id: { customer: "$customer", product: "$product" }, total_spent: { $sum: "$total" } } },
    { $sort: { "_id.customer": 1, "_id.product": 1 } }
]);

// 8. Find the customer who has given the highest business for the product toothbrush
db.purchase_orders.aggregate([
    { $match: { product: "toothbrush" } },
    { $group: { _id: "$customer", total_spent: { $sum: "$total" } } },
    { $sort: { total_spent: -1 } },
    { $limit: 1 }
]);

// Indexing for Optimization
// Index on product to speed up product-based queries
db.purchase_orders.createIndex({ product: 1 });

// Index on customer to optimize customer-based queries
db.purchase_orders.createIndex({ customer: 1 });

// Compound index on product and customer to improve performance on combined filters
db.purchase_orders.createIndex({ product: 1, customer: 1 });
